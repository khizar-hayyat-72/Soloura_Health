
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the requesting user is the owner of the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Allow users to create their own profile during signup
      allow create: if isAuthenticated() && request.resource.data.id == request.auth.uid;
      // Allow users to read and update their own profile
      allow read, update: if isOwner(userId);
      // Disallow delete for user profiles for now
      allow delete: if false;
    }

    // Rules for the 'journalEntries' collection
    match /journalEntries/{entryId} {
      // Allow users to create new journal entries if they are authenticated
      // and the entry's userId matches their own uid.
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      // Allow users to read, update, and delete their own journal entries.
      allow read, update, delete: if isAuthenticated() && isOwner(resource.data.userId);
    }

    // Default deny all other access to prevent accidental exposure
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
